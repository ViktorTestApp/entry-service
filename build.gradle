plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.gorylenko.gradle-git-properties' version '2.4.1'
}

group = 'com.example'
version = '1.0.0'
sourceCompatibility = '21'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    runtimeOnly 'org.postgresql:postgresql'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'io.gatling.highcharts:gatling-charts-highcharts:3.9.5'
}

tasks.named('test') {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.named('bootJar') {
    archiveFileName = 'entry-service.jar'
    launchScript()
}

tasks.named('compileJava') {
    options.compilerArgs += ['-parameters', '-Xlint:all,-processing']
}


tasks.withType(JavaCompile).configureEach {
    options.fork = true
    options.forkOptions.jvmArgs += ['-Xmx2g']
}

springBoot {
    buildInfo()
}

gitProperties {
    keys = ['git.branch', 'git.commit.id', 'git.commit.time']
}